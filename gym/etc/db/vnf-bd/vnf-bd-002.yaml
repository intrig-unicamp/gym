descriptor_version: 0.02
id: "002"
name: "vnf-bd-002"
version: "0.1"
author: "Raphael Vicente Rosa"
description: "Realizes the test of two agents realizing ping/iperf on a dummy VNF while monitoring it"

experiments:
  trials: 1
  tests: 1
  methods: 1

targets:
  - id: "{{ sut.id }}"
    name: "{{ sut.name }}"
    version: "{{ sut.version }}"
    author: "{{ sut.author }}"
    vendor: "{{ sut.vendor }}"
    description: "{{ sut.description }}"

environment:
  name: "Execution-Environment-Alpha"
  description: "Esablishes scenario in containernet"   
  deploy: true
  plugin: 
    type: "containernet" 
    parameters:
      - input: "entrypoint"
        value: "http://127.0.0.1:7878/001/"

scenario:
  nodes:
    - id: "{{ sut.id }}"
      image:  "{{ sut.image }}"
      image_format: "docker"
      connection_points:
      - id: "{{ sut.ports.input.id }}"
        type: "{{ sut.ports.input.type }}"
        address: "{{ sut.ports.input.address }}"
      - id: "{{ sut.ports.output.id }}"
        type: "{{ sut.ports.output.type }}"
        address: "{{ sut.ports.output.address }}"
      resources:
        cpu:
          vcpus: 1
          cpu_bw: 1.0
          pinning: ""
        memory:
          size: 2048
          units: "MB"
        storage:
          size: 2
          units: "GB"
      lifecycle:
        - workflow: "start"
          implementation: "{{ sut.entrypoint }}"

    - id:  "{{ agent_one.id }}"
      image:  "{{ agent_one.image }}"
      image_format: "docker"
      connection_points:
      - id: "{{ agent_one.ports.input.id or 'eth1' }}"
        interface: "ipv4"
        type: "internal"
        address: "{{ agent_one.ports.input.address }}"
      resources:
        cpu:
          vcpus: 1
          cpu_bw: 1.0
          pinning: ""
        memory:
          size: 2048
          units: "MB"
        storage:
          size: 2
          units: "GB"
      lifecycle:
        - workflow: "start"
          parameters:
            - input: "host_id"
              value: "agent-01"
            - input: "host_ip"
              value: "get_attrib:ip"
          implementation: "gym-agent --id {host_id} --url http://{host_ip}:8988 > gym-agent.log 2>&1 &"

    - id:  "{{ agent_two.id }}"
      image:  "{{ agent_two.image }}"
      image_format: "docker"
      connection_points:
      - id: "{{ agent_two.ports.input.id or 'eth1' }}"
        interface: "ipv4"
        type: "internal"
        address: "{{ agent_two.ports.input.address }}"
      resources:
        cpu:
          vcpus: 1
          cpu_bw: 1.0
          pinning: ""
        memory:
          size: 2048
          units: "MB"
        storage:
          size: 2
          units: "GB"
      lifecycle:
        - workflow: "start"
          parameters:
            - input: "host_id"
              value: "agent-02"
            - input: "host_ip"
              value: "get_attrib:ip"
          implementation: "gym-agent --id {host_id} --url http://{host_ip}:8988 > gym-agent.log 2>&1 &"

    - id: "d4"
      image:  null
      image_format: "process"
      type: "internal"
      connection_points: null
      resources: null
      relationships:
        - type: AttachesTo
          target: "{{ sut.id }}"
      lifecycle:
        - workflow: "start"
          parameters:
            - input: "monitor_id"
              value: "monitor-01"
            - input: "monitor_ip"
              value: "get_attrib:ip"
          implementation: "gym-monitor --id {monitor_id} --url http://{monitor_ip}:8987 > gym-mon.log 2>&1 &"

    - id:  "{{ manager.id }}"
      image:  "{{ manager.image }}"
      image_format: "docker"
      connection_points: null
      resources: 
        cpu:
          vcpus: 1
          cpu_bw: 1.0
          pinning: ''
        memory:
          size: 2048
          units: "MB"
        storage:
          size: 2
          units: "GB"
      lifecycle:
        - workflow: "start"
          parameters:
            - input: "host_id"
              value: "manager-01"
            - input: "host_ip"
              value: "get_attrib:ip"
          implementation: "gym-manager --id {host_id} --url http://{host_ip}:8989 > gym-mngr.log 2>&1 &"
      
  links:
    - id: "{{ agent_one.id }}-{{ sut.id }}"
      type: "{{ links.network_type or 'E-LAN' }}"
      network: "{{ links.network_one or 's1'}}"
      connection_points:
        - "{{ agent_one.id }}:{{ agent_one.ports.input.id or 'eth1' }}"
        - "{{ sut.id }}:{{ sut.ports.input.id or 'input' }}"
    - id: "{{ sut_id }}-{{ agent_2_id }}"
      type: "{{ links.network_type or 'E-LAN' }}"
      network: "{{ links.network_two or 's2' }}"
      connection_points:
        - "{{ sut.id }}:{{ sut.ports.output.id or 'output' }}"
        - "{{ agent_two.id }}:{{ agent_two.ports.input.id or 'eth1' }}"

proceedings:
  suts:
    - id: "bypass/vnf"
      host: 
        setting: "internal"
        node: "{{ sut.id }}"
  
  managers:
    - id: "manager-01"
      host: 
        setting: "internal"
        node: "{{ manager.id }}"

  agents:
    - id: "agent-01"
      host: 
        setting: "internal"
        node: "{{ agent_one.id }}"
      probers:
        - id: 4
          name: "iperf3"
          instances: "{{ settings.instances }}"
          parameters:
            - input: "client"
              value: true
            - input: "server"
              value: "{{ settings.server }}"
            - input: "port"
              value: "{{ settings.port }}"
            - input: "protocol"
              value: "{{ settings.protocol }}"
            - input: "duration"
              value: "{{ settings.duration }}"
            - input: "rate"
              value: "{{ settings.rate }}"
        - id: 2
          name: "iperf3"
          parameters:
            - input: "interval"
              value: null
            - input: "duration"
              value: "{{ settings.duration }}"
            - input: "packets"
              value: null
            - input: "frame_size"
              value: null
            - input: "target"
              value: "{{ settings.server }}"

    - id: "agent-02"
      host: 
        setting: "internal"
        node: "{{ agent_two.id }}"
      probers:
        - id: 4
          parameters:
            - input: "client"
              value: false
            - input: "port"
              value: "{{ settings.port }}"
            - input: "duration"
              value: "{{ settings.duration }}"

  monitors:
    - id: "monitor-01"
      host: 
        setting: "internal"
        node: "d4"
      listeners:
        - id: 17
          parameters:
            - input: "target"
              value: {{ settings.monitor.mon_container_target }}
            - input: "duration"
              value: {{ settings.duration }}
            - input: "interval"
              value: {{ settings.interval }}